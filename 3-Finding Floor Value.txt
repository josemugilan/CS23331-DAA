Problem Statement:
Given a sorted array and a value x, the floor of x is the largest element in array smaller than or equal to x. Write divide and conquer algorithm to find floor of x.
Input Format
   First Line Contains Integer n – Size of array
   Next n lines Contains n numbers – Elements of an array
   Last Line Contains Integer x – Value for x
 
Output Format
   First Line Contains Integer – Floor value for x





#include <stdio.h>

int findFloor(int arr[], int low, int high, int x) {
    if (low > high) return -1; 
    
    int mid = low + (high - low) / 2;

    if (arr[mid] == x) return arr[mid];  
    if (arr[mid] > x) return findFloor(arr, low, mid - 1, x);  

    int res = findFloor(arr, mid + 1, high, x);  
    return (res == -1) ? arr[mid] : res;  
}

int main() {
    int n, x;
    scanf("%d", &n);
    int arr[n];

    for (int i = 0; i < n; i++) scanf("%d", &arr[i]);  // Read array elements
    scanf("%d", &x);  // Read x after array input

    int floorValue = findFloor(arr, 0, n - 1, x);
    printf("%d\n", floorValue);

    return 0;
}




INPUT  OUTPUT
6
1
2       2
8
10
12
19
5
