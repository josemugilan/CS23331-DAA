Problem Statement:
Given a sorted array of integers say arr[] and a number x. Write a recursive program using divide and conquer strategy to check if there exist two elements in the array whose sum = x. If there exist such two elements then return the numbers, otherwise print as “No”.
Note: Write a Divide and Conquer Solution
Input Format
   First Line Contains Integer n – Size of array
   Next n lines Contains n numbers – Elements of an array
   Last Line Contains Integer x – Sum Value
Output Format
   First Line Contains Integer – Element1
   Second Line Contains Integer – Element2 (Element 1 and Elements 2 together sums to value “x”)






#include<stdio.h>
int findpair(int arr[],int left,int right,int x){
    if(left>=right){
        return 0;
    }
    int sum=arr[left]+ arr[right];
    
    if(sum==x){
        printf("%d\n%d\n",arr[left],arr[right]);
        return 1;
    }
    else if (sum < x){
        return findpair(arr,left+1,right,x);
        
    }else{
        return findpair(arr,left,right-1,x);
    }
}
int main(){
    int n,x;
    scanf("%d",&n);
    int arr[n];
    
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
        
    }
    scanf("%d",&x);
    if(!findpair(arr,0,n-1,x))
        printf("No\n");
    return 0;
}


INPUT    OUTPUT
4       
2
4          4 
8          10
10
14


